name: Cygwin Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup cache for Cygwin and pip
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip/
            C:\tools\cygwin\packages
          key: ${{ runner.os }}-build-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Cygwin
        id: install-cygwin
        uses: egor-tensin/setup-cygwin@v3
        with:
          platform: x64
          install-dir: 'C:\tools\cygwin'
          packages: python38-devel python38-numpy python38-pytest python38-hypothesis python38-cython python38-pip python38-wheel python38-setuptools liblapack-devel libopenblas gcc-fortran
      - name: Clean Windows PATH
        uses: egor-tensin/cleanup-path@v1
        with:
          dirs: ${{ steps.install-cygwin.install-dir }}
      - name: Ask pip to use cache contents
        run: |
          bash -c "mkdir -p ~/.config/pip"
          bash -c "echo >~/.config/pip/pip.conf $'[install]\nprefer-binary = True'"
      - name: Install dependencies
        env:
          BLAS: /usr/lib/libblas.dll.a
          LAPACK: /usr/lib/liblapack.dll.a
        run: |
          bash -c "python3.8 -m pip install --upgrade pip wheel"
          bash -c "python3.8 -m pip install -r requirements.txt"
          bash -c "python3.8 -m pip install -r requirements-test.txt"
      - name: Build wheel
        run: |
          bash -c "python3.8 setup.py bdist_wheel"
      - name: Install wheel
        run: |
          bash -c "python3.8 -m pip install dist/py_toeplitz*.whl"
      - name: Check that pip installed the extensions
        run: |
          bash -c "python3.7 -m pip show py_toeplitz
          bash -c "python3.7 -m pip show -f py_toeplitz | grep .dll"
          echo >list_dlls_dos.sh 'site_packages=$(python3.7 -m pip show py_toeplitz | grep Location | cut -d " " -f 2 -);
          dll_list=$(for name in $(python3.7 -m pip show -f py_toeplitz | grep -F .dll); do echo ${site_packages}/${name}; done)
          ls -l ${dll_list}
          file ${dll_list}
          ldd ${dll_list}
          cygcheck ${dll_list}
          for name in ${dll_list};
          do
              python3.7 -c "import "$(echo ${name} | sed -E -e "s|/home.*?site-packages/||g" -e "s|/|.|g" -e "s/.cpython-3.-x86(_64)?-cygwin.dll//g")
          done
          '
          bash -c "tr -d '\r' <list_dlls_dos.sh >list_dlls_unix.sh"
          bash list_dlls_unix.sh
      - name: Test with pytest
        run: |
          bash -c "python3.8 -m pip install pytest"
          bash -c "python3.8 -m pip install ."
          bash -c "python3.8 setup.py check"
          bash -c "python3.8 -m pytest"
          bash -c "python3.8 -m pytest --pyargs py_toeplitz --doctest-modules"
